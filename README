# DeadWood Board Game
DeadWood is a Java-based board game application developed to demonstrate object-oriented programming principles using the Model-View-Controller (MVC) architecture. The game features a graphical user interface built with Java Swing, providing an interactive experience for players.
Features:
Implements MVC architecture for clear separation of concerns.
Interactive GUI developed with Java Swing.
Simulates a board game environment with various player actions and game states.
Usage:
Clone the repository: ```bash git clone https://github.com/Brian-St/DeadWood-Board-Game.git

Compile the Java source files: ```bash javac -d bin src/*.java

Run the application: ```bash java -cp bin DeadWoodGame

Deadwood: "The Cheapass Game of Acting Badly"
A digital version, created with permission by Cheapass Games

Welcome to Deadwood!

This is a simple board game for 2-8 players (6 or fewer recommended)

Please read the English directions [here] (http://cheapass.com//wp-content/uploads/2016/07/Deadwood-Free-Edition-Rules.pdf)

User/Player Commands
who : Identifies the current player, their $ and cr count, and any parts (roles) that the player is working.
where : Displays te current player's room, any active scene, and available roles.
move room : Active player moves to indicated room.
work part : Active player starts working the indicated part (role).
upgrade $ level : Active player upgrades their rank to indicated level using their money. Only possible in Casting Office.
upgrade cr level : Active player upgrades their rank to indicated level using their credits. Only possible in Casting Office.
rehearse : Active player rehearses. Only possible if the player has a part.
act : Active player performs in their current role. Only possible if the player has a role.
end : Ends the active player's turn.
